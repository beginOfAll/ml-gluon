from mxnet import ndarray as nd


#
# a = nd.array([[1, 2], [3, 4]])
# b = nd.array([[3], [2]])
# c = nd.power(a, b)
# print(c)
#
# aa = nd.random.normal(shape=(10, 1))
# bb = nd.ones(shape=(10, 1))
# cc = nd.concat(aa, bb)
# print(cc)
# # cc.shape[0]
# print(cc.shape[3])
def cross_entropy(yhat, y):
    return - nd.pick(nd.log(yhat), y)


yhat = nd.array([[0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1],
                 [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1],
                 [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
                 [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1],
                 [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1],
                 [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1],
                 [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1],
                 [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1],
                 [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1],
                 [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]])
y1 = nd.array([0, 0, 1, 0, 0, 0, 0, 0, 0, 0])
print(cross_entropy(yhat, y1))
